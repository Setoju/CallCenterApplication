<Window x:Class="CallCenterApplication.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CallCenterApplication"
        mc:Ignorable="d"
        Title="MainWindow" MinHeight="450" MaxHeight="450" MinWidth="800" MaxWidth="800">
    <Window.Resources>
        <Style x:Key="OfficialButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="10, 5" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#808080"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#004669"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#C0C0C0"/>
                    <Setter Property="Foreground" Value="#808080"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <!-- Add Operator button -->
        <Button Content="Add Operator" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10" Click="AddOperatorButton_Click" Style="{StaticResource OfficialButtonStyle}"/>

        <!-- Fire Operator button -->
        <Button Content="Fire Operator" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="105,10,0,0" Click="FireOperatorButton_Click" Style="{StaticResource OfficialButtonStyle}"/>

        <!-- Call button -->
        <Button Content="Call" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="205,10,0,0" Click="CallButton_Click" Style="{StaticResource OfficialButtonStyle}"/>

        <!-- List of waiting calls -->
        <ListView x:Name="callsQueue" Margin="250, 10, 10, 340">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Name" Width="132">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Call Type" Width="132">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding CallType}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Complexity" Width="132">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding CallComplexity}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Waiting time" Width="132">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding WaitingTime}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
            <ListView.ItemsSource>
                <Binding Path="CallsQueue"/>
            </ListView.ItemsSource>
        </ListView>

        <!-- Operator details -->
        <ListView x:Name="operatorsListView" Margin="10, 100, 10, 10">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Name" Width="150">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Idle Time" Width="150">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding IdleTimeElapsed}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Performance" Width="150">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Performance}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="On Call" Width="150">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Text" Value="No"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsOnCall}" Value="True">
                                                    <Setter Property="Text" Value="Yes"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
            <ListView.ItemsSource>
                <Binding Path="Operators"/>
            </ListView.ItemsSource>
        </ListView>
    </Grid>
</Window>
